name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.4
        
    - name: Generate Gradle Wrapper (if missing)
      run: |
        if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
          echo "gradle-wrapper.jar missing, downloading..."
          mkdir -p gradle/wrapper
          wget -O gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.4.0/gradle/wrapper/gradle-wrapper.jar
        fi
        chmod +x ./gradlew
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Run unit tests
      run: ./gradlew testDebugUnitTest
      env:
        SKIP_JDK_VERSION_CHECK: true
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: app/build/test-results/testDebugUnitTest/*.xml
        reporter: java-junit
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: app/build/test-results/
        retention-days: 30

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.4
        
    - name: Generate Gradle Wrapper (if missing)
      run: |
        if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
          echo "gradle-wrapper.jar missing, downloading..."
          mkdir -p gradle/wrapper
          wget -O gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.4.0/gradle/wrapper/gradle-wrapper.jar
        fi
        chmod +x ./gradlew
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build debug APK
      if: github.event.inputs.build_type != 'release'
      run: ./gradlew assembleDebug
      env:
        SKIP_JDK_VERSION_CHECK: true
      
    - name: Build release APK
      if: github.event.inputs.build_type == 'release'
      run: ./gradlew assembleRelease
      env:
        SKIP_JDK_VERSION_CHECK: true
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: Upload debug APK
      if: github.event.inputs.build_type != 'release'
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ github.sha }}
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 30
        
    - name: Upload release APK
      if: github.event.inputs.build_type == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-${{ github.sha }}
        path: app/build/outputs/apk/release/*.apk
        retention-days: 90
        
    - name: Upload mapping file (release only)
      if: github.event.inputs.build_type == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: mapping-file-${{ github.sha }}
        path: app/build/outputs/mapping/release/mapping.txt
        retention-days: 90